buildscript{

	configurations.classpath {resolutionStrategy.cacheDynamicVersionsFor 0,'seconds'}

	repositories{
		mavenCentral()
		jcenter()
	}

	dependencies{
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.1.RELEASE")
	}

}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "org.springframework.boot"

sourceCompatibility = "1.8"
targetCompatibility = "1.8"


task wrapper(type:Wrapper){
	gradleVersion = "3.1"
}

repositories{
     mavenCentral()
     jcenter()
}

subprojects{
	subProject ->
		apply plugin:"java"
		apply plugin: "eclipse"
		apply plugin: "idea"
		apply plugin: "findbugs"

	findbugs{
		ignoreFailures = false
		toolVersion = "3.0.1"
		sourceSets = [sourceSets.main]
		reportsDir = file("$project.buildDir/reports/findbugs")
		effort = "max"
	}


	repositories{
                mavenCentral()
                jcenter()
        }

	configurations {
		runtime.exclude group: "org.slf4j", module: "slf4j-log4j12"
	}

	sourceCompatibility = 1.8

	task testJar(type: Jar) {
        classifier = 'tests'
        from sourceSets.test.output.classesDir
    }

}

subprojects.each { subproject -> evaluationDependsOn( subproject.path ) }
jar.dependsOn subprojects.tasks['classes']

task allJar( type: Jar, dependsOn: subprojects.tasks["build"] ) {

	baseName = 'expr4j'
	
	manifest{
		attributes 'Title':'Expression4J','Main-Class':'org.springframework.boot.loader.JarLauncher','Start-Class':'com.ericsson.expr4j.api.boot.Application'
	}
	
	destinationDir = new File("expr4j-boot","delivery")
	
    subprojects.each { subproject ->
        from subproject.configurations.archives.allArtifacts.files.collect {
            	zipTree(it)
        }
        from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        from files(subproject.tasks["test"].testClassesDir)
    }
    
}

artifacts {
	archives allJar
}

springBoot{
	mainClass="com.ericsson.expr4j.api.boot.Application"
}